@model FirstWebApplication1.Models.ObstacleData

@{
    ViewData["Title"] = "Register Obstacle";
}

<section class="mx-auto max-w-2xl pb-12">
    <div class="bg-white rounded-2xl shadow-sm ring-1 ring-gray-200 p-6">
        <!-- Header with page title and description -->
        <header class="mb-6">
            <h1 class="text-2xl font-semibold">Obstacle Registration Form</h1>
            <p class="text-gray-600">Please register an obstacle:</p>
        </header>

        <!-- Form to submit obstacle data -->
        <!-- asp-action="DataForm" means it will post to the DataForm action in the controller -->

        <form asp-action="DataForm" method="post" class="space-y-5">
            <!-- Obstacle Name -->
            <div class="sm:col-span-2">
                <!-- Input bound to ObstacleName property -->
                <label asp-for="ObstacleName" class="block text-sm font-medium text-gray-800 mb-1">Obstacle Name</label>
                <input asp-for="ObstacleName"
                       class="block w-full rounded-lg border-gray-300 focus:border-indigo-600 focus:ring-indigo-600 px-3 py-2"
                       placeholder="Radio tower, Mast, etc." />
                <span asp-validation-for="ObstacleName" class="text-sm text-red-600"></span>
            </div>

            <!-- Height -->
            <div>
                <label asp-for="ObstacleHeight" class="block text-sm font-medium text-gray-800 mb-1">
                    Obstacle Height (meters)
                </label>
                <!-- Number input with min value 15 and decimal support -->
                <input asp-for="ObstacleHeight" type="number" step="0.01" min="15"
                       class="block w-full rounded-lg border-gray-300 focus:border-indigo-600 focus:ring-indigo-600 px-3 py-2"
                       placeholder="e.g. 25" />
                <span asp-validation-for="ObstacleHeight" class="text-sm text-red-600"></span>
            </div>

            <!-- Description -->
            <div class="sm:col-span-2">
                <label asp-for="ObstacleDescription" class="block text-sm font-medium text-gray-800 mb-1">
                    Obstacle Description
                </label>
                <!-- Textarea bound to ObstacleDescription property -->
                <textarea asp-for="ObstacleDescription" rows="4"
                          class="block w-full rounded-lg border-gray-300 focus:border-indigo-600 focus:ring-indigo-600 px-3 py-2"
                          placeholder="Short description of the obstacle"></textarea>
                <span asp-validation-for="ObstacleDescription" class="text-sm text-red-600"></span>
            </div>

            <!-- Map -->
            <div class="sm:col-span-2">
                <label class="block text-sm font-medium text-gray-800 mb-1">Klikk på kartet for å velge posisjon</label>
                <div id="map" style="height: 300px; border: 1px solid #ccc;" class="rounded-lg"></div>
                <input asp-for="Latitude" class="block w-full rounded-lg border-gray-300 mt-2 px-3 py-2" readonly />
                <input asp-for="Longitude" class="block w-full rounded-lg border-gray-300 mt-2 px-3 py-2" readonly />
                <span asp-validation-for="Latitude" class="text-sm text-red-600"></span>
                <span asp-validation-for="Longitude" class="text-sm text-red-600"></span>

                <!-- Submit button placed just under the map -->
                <button type="submit"
                        class="mt-4 inline-flex items-center justify-center rounded-lg bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                    Submit Data
                </button>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <!-- Standard validation scripts -->
    <partial name="_ValidationScriptsPartial" />

    <!-- Leaflet CSS and JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>
        // create map 
        var map = L.map('map').setView([59.91, 10.75], 12);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap'
        }).addTo(map);

        var marker;

        // When user clicks on map, place or move the marker
        map.on('click', function (e) {
            if (marker) {
                marker.setLatLng(e.latlng);
            } else {
                marker = L.marker(e.latlng).addTo(map);
            }
            // Update Latitude and Longitude input fields with chosen coordinates
            document.querySelector('[name="Latitude"]').value = e.latlng.lat.toFixed(6);
            document.querySelector('[name="Longitude"]').value = e.latlng.lng.toFixed(6);
        });





        //geolocation 

           // Try to get user's current location
           map.locate({ setView: true, maxZoom: 16 });

           // If location is found, add marker + fill coordinates
           map.on('locationfound', function (e) {
               var radius = e.accuracy;

               // Add or update marker
               if (marker) {
                   marker.setLatLng(e.latlng);
               } else {
                   marker = L.marker(e.latlng).addTo(map);
               }

               // Update form fields
               document.querySelector('[name="Latitude"]').value = e.latlng.lat.toFixed(6);
               document.querySelector('[name="Longitude"]').value = e.latlng.lng.toFixed(6);

               // Optional: Add accuracy circle
               L.circle(e.latlng, radius).addTo(map)
                   .bindPopup("You are within " + Math.round(radius) + " meters from this point").openPopup();
           });

           // If geolocation fails
           map.on('locationerror', function (e) {
               alert("Geolocation failed: " + e.message);
           });

           // --- GEOLOCATION FEATURE ENDS HERE ---
    </script>
}
